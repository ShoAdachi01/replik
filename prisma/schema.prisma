generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                 String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @default(now()) @updatedAt
  audioUrl           String?
  photoUrls          String?
  voiceModelId       String?
  personalityData    String?
  faceData           String?
  chromaCollectionId String?
  fetchAgentId       String?
  name               String?
  email              String?
  consentAudio       Boolean        @default(false)
  consentChat        Boolean        @default(false)
  consentContext     Boolean        @default(false)
  consentFaceData    Boolean        @default(false)
  consentTimestamp   DateTime?
  username           String?        @unique
  bio                String?
  isPublic           Boolean        @default(false)
  minecraftUsername  String?
  conversations      Conversation[]
  memories           Memory[]
}

model Memory {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  userId    String   @db.Uuid
  content   String
  embedding String
  category  String?
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Conversation {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  userId    String   @db.Uuid
  role      String
  content   String
  audioUrl  String?
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
